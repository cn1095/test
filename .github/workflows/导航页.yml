name: 编译导航页

on:
  workflow_dispatch:
    inputs:
      upx:
        description: '编译完成后是否使用upx压缩体积'
        required: true
        default: false
        type: boolean

jobs:
 shortener:
    strategy:
      fail-fast: false
      matrix:
        include:
          - GOARCH: arm64
            GOOS: linux
            NAME: linux-aarch64
          - GOARCH: arm
            GOARM: 7
            GOOS: linux
            NAME: linux-arm7
          - GOARCH: arm
            GOARM: 6
            NAME: linux-arm6
            GOOS: linux
          - GOARCH: arm
            GOARM: 5
            GOOS: linux
            NAME: linux-arm5
          - GOARCH: arm
            GOOS: linux
            NAME: linux-arm
          - GOARCH: mipsle
            GOMIPS: softfloat
            GOOS: linux
            NAME: linux-mipsel
          - GOARCH: mips
            GOMIPS: softfloat
            GOOS: linux
            NAME: linux-mips
          - GOARCH: mips64
            GOOS: linux
            NAME: linux-mips64
          - GOARCH: mips64le
            GOOS: linux
            NAME: linux-mips64le
          - GOARCH: ppc64le
            GOOS: linux
            NAME: linux-ppc64le
          - GOARCH: s390x
            GOOS: linux
            NAME: linux-s390x
          - GOARCH: amd64
            GOOS: linux
            NAME: linux-x86
          - GOARCH: amd64
            GOOS: freebsd
            NAME: freebsd-x86
    runs-on: ubuntu-20.04
    env:
      GOarch: ${{ matrix.GOARCH }}
      GOos: ${{ matrix.GOOS }}
      GOarm: ${{ matrix.GOARM }}
      GOmips: ${{ matrix.GOMIPS }}
      NAME: ${{ matrix.NAME }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          repository: Mereithhh/van-nav
          ref: master
      - uses: actions/setup-node@v3
        with:
          node-version: "18.14.1"
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.19
      - name: build public files
        run: |
          npm install -g pnpm
          echo "清空原有数据"
          rm -rf ./public
          mkdir -p public
          echo '构建用户页面'
          cd ui && CI=false pnpm install && CI=false pnpm build && cd ..
          cp -r ui/build/* public/
          echo '构建前端数据完成'
          ls public/static
      - name: 开始编译
        run: |
            sudo timedatectl set-timezone "Asia/Shanghai"
            export CGO_ENABLED=0
            export GOOS=$GOos
            export GOARCH=$GOarch
            export GOARM=$GOarm
            export GOMIPS=$GOmips
            go build -ldflags="-s -w"
            ls
            mv -f nav van-nav-${{ matrix.NAME }}
      - name: 安装 UPX
        if: github.event.inputs.upx == 'true'
        uses: crazy-max/ghaction-upx@v3
        with:
          version: latest
          install-only: true
      - name: UPX压缩
        if: github.event.inputs.upx == 'true' 
        run: |
          if [ "${GOos}" != "freebsd" ] && [ "${GOarch}" != "mips64" ] && [ "${GOarch}" != "mips64le" ] && [ "${GOarch}" != "ppc64le" ] && [ "${GOarch}" != "s390x" ]; then
             upx --lzma --best van-nav-${{ matrix.NAME }}
          fi
      - name: 上传
        uses: actions/upload-artifact@v4
        with:
          name: 导航页-${{ matrix.NAME }}
          path: ./van-nav-${{ matrix.NAME }}

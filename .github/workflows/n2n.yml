name: A编译n2n-FreeBSD

on:
  workflow_dispatch:
    inputs:
      tag:
        description: '请填写构建N2N的ntop/n2n分支或提交记录（dev - 2.8-stable - 3.0-stable）'
        required: true
        default: 'dev'
      strip:
        description: '使用strip剥离二进制程序以减少体积'
        required: true
        default: false
        type: boolean
      upx:
        description: '使用upx压缩二进制程序以最大化减少体积'
        required: true
        default: false
        type: boolean
      static:
        description: '采用静态编译'
        required: true
        default: false
        type: boolean
  
env:
  BRANCH: "${{ github.event.inputs.tag }}"
jobs:
 build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          repository: ntop/n2n
          ref: ${{ env.BRANCH }}  #2.8-stable #默认使用dev分支
      - name: static
        if: github.event.inputs.static == 'true'
        run: |
          echo 'build_static="-static"' >> $GITHUB_ENV
      - name: name
        run: |
          if [[ $BRANCH == 'dev' ]] ; then
             echo 'build_name=3.1-' >> $GITHUB_ENV
          elif [[ $BRANCH == '2.8-stable' ]] ; then
            echo 'build_name=2.8-' >> $GITHUB_ENV
          elif [[ $BRANCH == '3.0-stable' ]] ; then
            echo 'build_name=3.0-' >> $GITHUB_ENV
          fi
      - name: Fix Checkout
        run: |
          [[ -f ./VERSION ]] && VERSION=$(cat ./VERSION)
          sudo timedatectl set-timezone "Asia/Shanghai"
          DATE=$(TZ='Asia/Shanghai' date +'%Y-%m-%d %H:%M:%S')
          sed -i "s/AC_INIT(\[edge\], m4_esyscmd(\[scripts\/version\.sh | tr -d '\\\n'\]))/AC_INIT([edge], [$VERSION])/" configure.ac
          sed -i "s/AC_DEFINE(\[PACKAGE_BUILDDATE\], \"\[m4_esyscmd(\[scripts\/version\.sh date | tr -d '\\\n'\])\]\", \[Last change date\])/AC_DEFINE([PACKAGE_BUILDDATE], \"[$DATE]\", [Last change date])/" configure.ac
      - name: Set up FreeBSD
        uses: cross-platform-actions/action@v0.23.0
        with:
          operating_system: freebsd
          architecture: x86-64
          version: '13.2'
          shell: bash
          memory: 5G
          cpu_count: 4
          run: |
            sudo pkg install -y \
              autoconf \
              automake \
              git-tiny \
              gmake \
              python3 \
              jq \
              bash \
              pkgconf
            ./autogen.sh
            ./configure CC=clang ${{ env.build_static }} 
            gmake all
            file supernode
            mkdir -p ./bin
            mv -f edge ./bin/edge
            mv -f supernode ./bin/supernode
            mv -f example_edge_embed_quick_edge_init ./bin/example_edge_embed_quick_edge_init
            mv -f example_edge_embed ./bin/example_edge_embed
            mv -f example_sn_embed ./bin/example_sn_embed
            mv -f ./tools/n2n-benchmark ./bin/n2n-benchmark
            if [[ github.event.inputs.strip == 'true' ]] ; then
              strip ./bin/edge
              strip ./bin/supernode
              strip ./bin/example_edge_embed_quick_edge_init
              strip ./bin/example_edge_embed
              strip ./bin/example_sn_embed
              strip ./bin/n2n-benchmark
            fi
      - name: Install UPX
        if: github.event.inputs.upx == 'true'
        uses: crazy-max/ghaction-upx@v3
        with:
          version: latest
          install-only: true
      - name: upx
        if: github.event.inputs.upx == 'true'
        run: |
          upx --lzma --best ./bin/edge
          upx --lzma --best ./bin/supernode
          upx --lzma --best ./bin/example_edge_embed_quick_edge_init
          upx --lzma --best ./bin/example_edge_embed
          upx --lzma --best ./bin/example_sn_embed
          upx --lzma --best ./bin/n2n-benchmark
      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
           name: n2n-${{ env.build_name }}freebsd
           path: ./bin/*

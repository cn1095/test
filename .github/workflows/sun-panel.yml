name: 编译sun-panel导航页

on:
  workflow_dispatch:
    inputs:
      upx:
        description: '编译完成后是否使用upx压缩体积'
        required: true
        default: false
        type: boolean

jobs:
 shortener:
    strategy:
      fail-fast: false
      matrix:
        include:
          - GOARCH: arm64
            GOOS: linux
            NAME: linux-aarch64
            MUSL: aarch64-linux-musl
          - GOARCH: arm
            GOARM: 7
            GOOS: linux
            NAME: linux-arm7
            MUSL: armv7m-linux-musleabi
          - GOARCH: arm
            GOARM: 6
            NAME: linux-arm6
            GOOS: linux
            MUSL: armv6-linux-musleabi  
          - GOARCH: arm
            GOARM: 5
            GOOS: linux
            NAME: linux-arm5
            MUSL: armv5l-linux-musleabi
          - GOARCH: arm
            GOOS: linux
            NAME: linux-arm
            MUSL: arm-linux-musleabi
          - GOARCH: mipsle
            GOMIPS: softfloat
            GOOS: linux
            NAME: linux-mipsel
            MUSL: mipsel-linux-muslsf
          - GOARCH: mips
            GOMIPS: softfloat
            GOOS: linux
            NAME: linux-mips
            MUSL: mips-linux-muslsf
          - GOARCH: mips64
            GOOS: linux
            NAME: linux-mips64
            MUSL: mips64-linux-musl
          - GOARCH: mips64le
            GOOS: linux
            NAME: linux-mips64le
            MUSL: mips64el-linux-musl
          - GOARCH: ppc64le
            GOOS: linux
            NAME: linux-ppc64le
            MUSL: powerpc64-linux-musl
          - GOARCH: s390x
            GOOS: linux
            NAME: linux-s390x
            MUSL: s390x-linux-musl 
          - GOARCH: amd64
            GOOS: linux
            NAME: linux-x86
            MUSL: x86_64-linux-musl 
          #- GOARCH: amd64
            #GOOS: freebsd
            #NAME: freebsd-x86
    runs-on: ubuntu-20.04
    env:
      GOarch: ${{ matrix.GOARCH }}
      GOos: ${{ matrix.GOOS }}
      GOarm: ${{ matrix.GOARM }}
      GOmips: ${{ matrix.GOMIPS }}
      NAME: ${{ matrix.NAME }}
      MUSL: ${{ matrix.MUSL }}
    steps:
      - uses: actions/checkout@v4
        with:
          repository: hslr-s/sun-panel
          ref: master
      - uses: actions/setup-node@v4
        with:
          node-version: "21"
      - uses: pnpm/action-setup@v3
        with:
          version: 9
          run_install: false
      - name: 获取最新Go
        run: |
          latest_version=$(curl -L -k -s https://golang.org/dl/?mode=json | grep -m 1 -o '"version": "[^"]*' | sed 's/"version": "//' | tr -d 'go" ')
          echo "go版本=$latest_version"
          echo "gotag=$latest_version" >> $GITHUB_ENV
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.gotag }}
      - uses: lmq8267/dl-musl@main
        with:
          target: ${{ matrix.MUSL }}
          static: true
          gccpath: /tmp
      - name: 打包静态页面
        run: |
          echo '构建用户页面'
          pnpm install
          pnpm run build
          echo '构建前端数据完成'
          ls ./dist
      - name: 上传静态页面
        uses: actions/upload-artifact@v4
        with:
          name: sun-panel-静态页面_${{ matrix.NAME }}
          path: ./dist/*
      - name: 开始编译
        run: |
            sudo timedatectl set-timezone "Asia/Shanghai"
            cd ./service
            go install -a -v github.com/go-bindata/go-bindata/...@latest
            go install -a -v github.com/elazarl/go-bindata-assetfs/...@latest
            go-bindata-assetfs -o=assets/bindata.go -pkg=assets assets/...
            muslflags="--extldflags '-static -fpic' $ldflags"
            ldflags="-X sun-panel/global.RUNCODE=release"
            export CGO_ENABLED=1
            export GOOS=$GOos
            export GOARCH=$GOarch
            export GOARM=$GOarm
            export GOMIPS=$GOmips
            go build -o /opt/sun-panel_${{ matrix.NAME }} -ldflags="$muslflags" main.go
      - name: 安装 UPX
        if: github.event.inputs.upx == 'true'
        uses: crazy-max/ghaction-upx@v3
        with:
          version: latest
          install-only: true
      - name: UPX压缩
        if: github.event.inputs.upx == 'true' 
        run: |
          if [ "${GOos}" != "freebsd" ] && [ "${GOarch}" != "mips64" ] && [ "${GOarch}" != "mips64le" ] && [ "${GOarch}" != "ppc64le" ] && [ "${GOarch}" != "s390x" ]; then
             upx --lzma --best /opt/sun-panel_${{ matrix.NAME }}
          fi
      - name: 上传主程序
        uses: actions/upload-artifact@v4
        with:
          name: sun-panel_${{ matrix.NAME }}
          path: /opt/sun-panel_${{ matrix.NAME }}

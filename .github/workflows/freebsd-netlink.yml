name: netlink-FreeBSD测试

on:
  workflow_dispatch:
    inputs:
      tag:
        description: '请填写构建netlink的rustp2p/NetLink分支或提交记录，默认主分支main'
        required: true
        default: 'main'
  
env:
  CARGO_TERM_COLOR: always
  BRANCH: "${{ github.event.inputs.tag }}"
jobs:
 build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          repository: rustp2p/NetLink
          ref: ${{ env.BRANCH }} #默认使用main分支
      - uses: snickerbockers/submodules-init@v4
      - name: Build web
        run: |
          cd web-app
          npm install
          npm run build
          cd ..
          cp -r ./web-app/dist/* ./static/
      - name: Set up FreeBSD
        uses: cross-platform-actions/action@master
        with:
          operating_system: freebsd
          architecture: x86-64
          version: '14.0'
          shell: bash
          memory: 5G
          cpu_count: 4
          run: |
              curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
              source $HOME/.cargo/env
              export CARGO_TERM_COLOR=always
              #rustup set auto-self-update disable
              #rustup install 1.71
              #rustup default 1.71
              export CC=clang
              export CXX=clang++
              
              #export RUSTFLAGS='-C target-feature=+crt-static -C strip=symbols'
              #export RUSTFLAGS="-C opt-level=z -C target-cpu=native -C link-arg=-s"
              export RUSTFLAGS="-C strip=symbols -C link-dead-code"
              cargo build --release --features default
              file ./target/release/net_link
              ./target/release/net_link -h
              mv ./target/release/net_link ./target/release/netlink
              
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: netlink_FreeBSD
          path: target/release/netlink
